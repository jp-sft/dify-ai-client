/* tslint:disable */
/* eslint-disable */
/**
 * Chat Application API
 * API documentation for the Chat Application.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { FileInput } from './file-input';
 /**
 * 
 *
 * @export
 * @interface SendChatMessageRequest
 */
export interface SendChatMessageRequest {

    /**
     * User input/question content.
     *
     * @type {string}
     * @memberof SendChatMessageRequest
     */
    _query: string;

    /**
     * Allows the entry of various variable values defined by the App. Contains multiple key/value pairs, each corresponding to a specific variable. For file types, specify an object with `type`, `transfer_method`, `url`, or `upload_file_id`. 
     *
     * @type {any}
     * @memberof SendChatMessageRequest
     */
    inputs?: any;

    /**
     * The mode of response return. Supports: - `streaming`: Streaming mode (recommended), implements typewriter-like output through SSE. - `blocking`: Returns result after execution is complete. May be interrupted if the process is long. **Note:** Due to Cloudflare restrictions, blocking requests will be interrupted without a return after 100 seconds. 
     *
     * @type {string}
     * @memberof SendChatMessageRequest
     */
    responseMode: SendChatMessageRequestResponseModeEnum;

    /**
     * User identifier, uniquely defined by the developer within the application for retrieval and statistics. 
     *
     * @type {string}
     * @memberof SendChatMessageRequest
     */
    user: string;

    /**
     * Conversation ID to continue the conversation based on previous chat records. Must pass the previous message's `conversation_id`. 
     *
     * @type {string}
     * @memberof SendChatMessageRequest
     */
    conversationId?: string;

    /**
     * File list for inputting files combined with text understanding. Suitable only when the model supports Vision capability. 
     *
     * @type {Array<FileInput>}
     * @memberof SendChatMessageRequest
     */
    files?: Array<FileInput>;
}

/**
 * @export
 * @enum {string}
 */
export enum SendChatMessageRequestResponseModeEnum {
    Streaming = 'streaming',
    Blocking = 'blocking'
}

